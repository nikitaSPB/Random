[{"/Users/nikita.sp/Desktop/random/src/index.js":"1","/Users/nikita.sp/Desktop/random/src/App.js":"2"},{"size":254,"mtime":1690987616000,"results":"3","hashOfConfig":"4"},{"size":1921,"mtime":1691446921073,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17f5b3c",{"filePath":"9","messages":"10","suppressedMessages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"12"},"/Users/nikita.sp/Desktop/random/src/index.js",[],[],"/Users/nikita.sp/Desktop/random/src/App.js",["13","14","15"],[],"import \"./App.css\";\nimport \"./style.css\";\nimport {useState} from \"react\";\nimport Papa from \"papaparse\";\n\nfunction App() {\n    const [cache, setCache] = useState(new Set());\n\n    const [values, setValues] = useState([]);\n\n    const [item, setItem] = useState();\n    const [dupl, setDupl] = useState(false);\n\n    const changeHandler = (event) => {\n        Papa.parse(event.target.files[0], {\n            header: true,\n            skipEmptyLines: true,\n            complete: function (results) {\n\n                const valuesArray = [];\n\n\n                results.data.map((d) => {\n                    valuesArray.push(Object.values(d));\n                });\n                setValues(valuesArray);\n            },\n        });\n    };\n\n    const handeGenerate = () => {\n        const ind = Math.floor(Math.random() * values.length);\n        if (cache.has(ind)) {\n            setDupl(true);\n            return;\n        } else {\n            const newCache = new Set(cache);\n            newCache.add(ind);\n            setCache(newCache);\n            setItem(values[ind]);\n            setDupl(false);\n        }\n    }\n\n    return (\n        <div className=\"parent-container\">\n            <div className=\"rectangle-container\">\n                <h1>РАНДОМАЙЗЕР ИЗ СПИСКА</h1>\n                <input type=\"file\" id=\"csv-file\" accept=\".csv\" onChange={changeHandler}/>\n                <br/>\n                <br/>\n                <textarea id=\"input-field\" className=\"custom-input\"\n                          placeholder=\"Добавьте по одному участнику в каждой строке...\"/>\n                <br/>\n                <br/>\n                <button className=\"button1\" onClick={handeGenerate}>Выбрать победителя</button>\n                <p> Победитель: <a href={item} target= '_blank'>{item} </a></p>\n            </div>\n        </div>\n    )\n}\n\nexport default App;\n\n\n",{"ruleId":"16","severity":1,"message":"17","line":12,"column":12,"nodeType":"18","messageId":"19","endLine":12,"endColumn":16},{"ruleId":"20","severity":1,"message":"21","line":23,"column":38,"nodeType":"22","messageId":"23","endLine":23,"endColumn":40},{"ruleId":"24","severity":1,"message":"25","line":57,"column":33,"nodeType":"26","messageId":"27","endLine":57,"endColumn":65,"fix":"28"},"no-unused-vars","'dupl' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"29","text":"30"},[1755,1755]," rel=\"noreferrer\""]